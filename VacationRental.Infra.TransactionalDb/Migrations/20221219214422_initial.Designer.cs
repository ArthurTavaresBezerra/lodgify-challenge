// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VacationRental.Infra.TransactionalDb.Database;

namespace VacationRental.Infra.TransactionalDb.Migrations
{
    [DbContext(typeof(TransDbContext))]
    [Migration("20221219214422_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VacationRental.Domain.Entities.BookingEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateAt");

                    b.Property<DateTime>("End");

                    b.Property<int>("RentalId");

                    b.Property<DateTime>("Start");

                    b.Property<int>("Unit");

                    b.HasKey("Id");

                    b.HasIndex("RentalId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("VacationRental.Domain.Entities.PreparationTimeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookingId");

                    b.Property<DateTime>("CreateAt");

                    b.Property<DateTime>("End");

                    b.Property<int>("RentalId");

                    b.Property<DateTime>("Start");

                    b.Property<int>("Unit");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("RentalId");

                    b.ToTable("PreparationTimes");
                });

            modelBuilder.Entity("VacationRental.Domain.Entities.RentalEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateAt");

                    b.Property<int>("PreparationTimeInDays");

                    b.Property<int>("Units");

                    b.HasKey("Id");

                    b.ToTable("Rentals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2022, 12, 19, 21, 44, 22, 109, DateTimeKind.Utc).AddTicks(3543),
                            PreparationTimeInDays = 0,
                            Units = 3
                        });
                });

            modelBuilder.Entity("VacationRental.Domain.Entities.BookingEntity", b =>
                {
                    b.HasOne("VacationRental.Domain.Entities.RentalEntity", "Rental")
                        .WithMany("Bookings")
                        .HasForeignKey("RentalId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VacationRental.Domain.Entities.PreparationTimeEntity", b =>
                {
                    b.HasOne("VacationRental.Domain.Entities.BookingEntity", "Booking")
                        .WithMany("PreparationTimes")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VacationRental.Domain.Entities.RentalEntity", "Rental")
                        .WithMany("PreparationTimes")
                        .HasForeignKey("RentalId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
